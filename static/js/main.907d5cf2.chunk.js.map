{"version":3,"sources":["widgets/Notifier.tsx","widgets/DatePicker.tsx","widgets/Select.tsx","widgets/Amount.tsx","widgets/Comment.tsx","widgets/CommentWithSuggestion.tsx","sheets/config.ts","sheets/validation.ts","sheets/spreadsheet.ts","widgets/TabContainer.tsx","widgets/Tabs.tsx","widgets/SignInAndOut.tsx","widgets/SecretDialog.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","close","padding","spacing","Notifier","props","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","_React$useState4","message","setMessage","handleClose","_event","reason","logger","log","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","key","aria-label","color","className","onClick","Close_default","DatePicker","TextField","id","label","type","fullWidth","value","onChange","event","newValue","target","InputLabelProps","shrink","Select","InputLabel","htmlFor","NativeSelect","choices","map","choice","index","Amount","placeholder","margin","Comment","createStyles","root","flexGrow","input","display","height","valueContainer","flexWrap","flex","alignItems","overflow","noOptionsMessage","singleValue","fontSize","palette","text","hint","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","_ref","inputRef","objectWithoutProperties","assign","ref","components","Control","children","innerProps","innerRef","_props$selectProps","selectProps","TextFieldProps","InputProps","inputProps","objectSpread","Menu","Paper","square","NoOptionsMessage","Typography","Option","MenuItem","selected","isFocused","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CommentWithSuggestion","suggestions","suggestion","useTheme","selectStyles","base","primary","& input","font","valueConverted","NoSsr","react_select_browser_esm","styles","inputId","isClearable","options","undefined","url","URL","window","location","href","isDebug","param","toLowerCase","parseBoolean","searchParams","get","getConfigObject","password","config","configParam","configFile","getConfigParamOrResource","valid","JSON","parse","_unused","encrypted","decrypted","CryptoJS","AES","decrypt","toString","enc","Utf8","error","getConfig","json","validation","obj","test","Ajv","allErrors","compile","title","properties","apiKey","clientId","spreadsheetId","sheetData","minItems","items","required","headers","values","additionalProperties","errors","validate","discoveryDocs","scope","loadGApi","setSignInStatus","initClient","_initClient","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","gapi","client","init","auth2","getAuthInstance","isSignedIn","listen","t0","console","stringify","stop","script","document","src","onload","load","body","appendChild","handleSignIn","signIn","handleSignOut","signOut","appendRow","_x","_x2","_x3","_appendRow","_callee2","sheet","row","response","_context2","sheets","spreadsheets","append","range","concat","valueInputOption","resource","sent","abrupt","updatedRange","result","updates","updatedRows","_callee3","_context3","String","button","valuesToArray","elements","object","Array","from","length","fill","forEach","dateString","date","Date","year","getFullYear","padStart","month","getMonth","day","getDate","formatOut","TabContainer","initialValues","_ref2","nowDate","state","setState","_ref3","oldState","defineProperty","element","baseProps","Button","size","variant","disabled","width","backgroundColor","background","ScrollableTabs","tabIndex","setTabIndex","AppBar","Tabs","_","newIndex","indicatorColor","textColor","scrollButtons","Tab","setSignIn","loaded","SignInAndOut","useEffect","onSignIn","signInButton","Badge","badgeContent","CloudOff_default","signOutButton","CloudDone_default","defaultPassword","SecretDialog","isValid","initialCheck","isValidPassword","isValidCheck","setValidCheck","_React$useState5","_React$useState6","tmpValue","setTmpValue","isSet","onValue","Lock_default","LockOutlined_default","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","DialogActions","appTitle","whiteSpace","paddingRight","subtitle","textOverflow","failure","fontStyle","hideSecretDialogOnUnlock","storageKey","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","localStorage","getItem","setConfig","setValid","isOnline","setIsOnline","_React$useState7","_React$useState8","setIsSignedIn","_React$useState9","_React$useState10","sheetTitle","setSheetTitle","addEventListener","Toolbar","name","version","OfflineBolt_default","signedIn","_x4","_getSpreadsheetTitle","getSpreadsheetTitle","newPassword","newConfig","setItem","getElementById","ready","unregister","process","origin","fetch","contentType","status","indexOf","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.907d5cf2.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\ninterface NotifierProps {\n  logger: Logger;\n}\n\nexport default function Notifier(props: NotifierProps) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState('Hello!');\n\n  function handleClick(message: string) {\n    setMessage(message);\n    setOpen(true);\n  }\n\n  props.logger.log = handleClick;\n\n  function handleClose(_event: unknown, reason?: string) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={message}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface DatePickerProps {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function DatePicker(props: DatePickerProps) {\n  const handleChange = (event: any) => {\n    const newValue = event.target.value;\n    props.onChange(newValue);\n  };\n\n  return (\n    <TextField\n      id=\"date\"\n      label=\"Date\"\n      type=\"date\"\n      fullWidth\n      value={props.value}\n      onChange={handleChange}\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\ninterface SelectProps {\n  choices: string[];\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function Select(props: SelectProps) {\n  return (\n    <div>\n      <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\n        Type\n      </InputLabel>\n      <NativeSelect\n        fullWidth\n        value={props.value}\n        onChange={event => props.onChange(event.target.value)}\n      >\n        <option value={''} key={-1}>\n          None\n        </option>\n        {props.choices.map((choice, index) => {\n          return (\n            <option value={choice} key={index}>\n              {choice}\n            </option>\n          );\n        })}\n      </NativeSelect>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface AmountProps {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function Amount(props: AmountProps) {\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    props.onChange(newValue);\n  };\n\n  return (\n    <TextField\n      id=\"standard-number\"\n      label=\"Amount\"\n      placeholder=\"How much was spent...\"\n      value={props.value}\n      onChange={handleChange}\n      type=\"number\"\n      fullWidth\n      InputLabelProps={{\n        shrink: true,\n      }}\n      margin=\"normal\"\n    />\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface CommentProps {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function Comment(props: CommentProps) {\n  const handleChange = (event: any) => {\n    const newValue = event.target.value;\n    props.onChange(newValue);\n  };\n\n  return (\n    <TextField\n      id=\"standard-full-width\"\n      label=\"Comment\"\n      value={props.value}\n      onChange={handleChange}\n      type=\"text\"\n      placeholder=\"What you spent money on...\"\n      fullWidth\n      margin=\"normal\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  );\n}\n","import React, { CSSProperties, HTMLAttributes } from 'react';\n// import Select from 'react-select';\nimport Select from 'react-select/creatable';\nimport {\n  createStyles,\n  makeStyles,\n  useTheme,\n  Theme,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField, { BaseTextFieldProps } from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PropTypes from 'prop-types';\nimport { ValueContainerProps } from 'react-select/src/components/containers';\nimport { ControlProps } from 'react-select/src/components/Control';\nimport { MenuProps, NoticeProps } from 'react-select/src/components/Menu';\nimport { OptionProps } from 'react-select/src/components/Option';\nimport { PlaceholderProps } from 'react-select/src/components/Placeholder';\nimport { SingleValueProps } from 'react-select/src/components/SingleValue';\nimport { ValueType } from 'react-select/src/types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    input: {\n      display: 'flex',\n      padding: 0,\n      height: 'auto',\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden',\n    },\n    noOptionsMessage: {\n      padding: theme.spacing(1, 2),\n    },\n    singleValue: {\n      fontSize: 16,\n    },\n    placeholder: {\n      color: theme.palette.text.hint,\n      position: 'absolute',\n      left: 2,\n      bottom: 6,\n      fontSize: 16,\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing(1),\n      left: 0,\n      right: 0,\n    },\n    divider: {\n      height: theme.spacing(2),\n    },\n  }),\n);\n\nfunction NoOptionsMessage(props: NoticeProps<OptionType>) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\ntype InputComponentProps = Pick<BaseTextFieldProps, 'inputRef'> &\n  HTMLAttributes<HTMLDivElement>;\n\nfunction inputComponent({ inputRef, ...props }: InputComponentProps) {\n  return <div ref={inputRef} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n} as any;\n\nfunction Control(props: ControlProps<OptionType>) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps },\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps,\n        },\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction Option(props: OptionProps<OptionType>) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool,\n} as any;\n\nfunction Placeholder(props: PlaceholderProps<OptionType>) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction SingleValue(props: SingleValueProps<OptionType>) {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction ValueContainer(props: ValueContainerProps<OptionType>) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction Menu(props: MenuProps<OptionType>) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object,\n} as any;\n\nconst components = {\n  Control,\n  Menu,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\ninterface OptionType {\n  label: string;\n  value: string;\n}\n\ninterface CommentWithSuggestionProps {\n  suggestions: string[];\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function CommentWithSuggestion(\n  props: CommentWithSuggestionProps,\n) {\n  const suggestions: OptionType[] = props.suggestions.map(suggestion => ({\n    value: suggestion,\n    label: suggestion,\n  }));\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  function handleChangeSingle(value: ValueType<OptionType>) {\n    if (value === null || value === undefined) {\n      props.onChange(undefined);\n      return;\n    }\n\n    // we are not using the array options, only single value\n    // so the cast is safe\n    props.onChange((value as OptionType).value);\n  }\n\n  const selectStyles = {\n    input: (base: CSSProperties) => ({\n      ...base,\n      color: theme.palette.text.primary,\n      '& input': {\n        font: 'inherit',\n      },\n    }),\n  };\n\n  const valueConverted: ValueType<OptionType> = props.value\n    ? { label: props.value, value: props.value }\n    : null;\n\n  return (\n    <div className={classes.root}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-single\"\n          TextFieldProps={{\n            label: 'Type',\n            InputLabelProps: {\n              htmlFor: 'react-select-single',\n              shrink: true,\n            },\n          }}\n          placeholder={'Expense type...'}\n          isClearable\n          options={suggestions}\n          components={components}\n          value={valueConverted}\n          onChange={handleChangeSingle}\n        />\n      </NoSsr>\n    </div>\n  );\n}\n","import CryptoJS from 'crypto-js';\nimport { validate } from './validation';\n// import configFile from '../resources/decrypted.json';\nimport configFile from '../resources/encrypted.json';\n\nconst url = new URL(window.location.href);\n\nfunction parseBoolean(param: string | null) {\n  return param !== null && param.toLowerCase() === 'true';\n}\n\nexport function isDebug(): boolean {\n  const param = url.searchParams.get('debug');\n  return parseBoolean(param);\n}\n\nfunction getConfigParamOrResource(): unknown {\n  const configParam = url.searchParams.get('config');\n  if (configParam === null) {\n    return configFile;\n  }\n  return configParam;\n}\n\nfunction decrypt(encrypted: string, password: string): any {\n  const decrypted = CryptoJS.AES.decrypt(encrypted, password);\n  return JSON.parse(decrypted.toString(CryptoJS.enc.Utf8));\n}\n\nfunction getConfigObject(password?: string): Valid<any> {\n  const config = getConfigParamOrResource();\n  // console.log('using config', config);\n  if (typeof config === 'string') {\n    try {\n      return { valid: true, value: JSON.parse(config) };\n    } catch {\n      // ignores any error, assumes some parsing failure\n      if (password) {\n        try {\n          const decrypted = decrypt(config, password);\n          return { valid: true, value: decrypted };\n        } catch (error) {\n          // fall through\n        }\n      }\n    }\n    return { valid: false };\n  }\n  return { valid: true, value: config };\n}\n\nexport function getConfig(password?: string): Valid<GApiData> {\n  const json = getConfigObject(password);\n  if (!json.valid) {\n    return { valid: false };\n  }\n  const validation = validate(json.value);\n  if (validation.valid) {\n    return { valid: true, value: validation.value };\n  }\n  return { valid: false };\n}\n","import Ajv from 'ajv';\n\nexport function validate(obj: unknown): Valid<GApiData> {\n  const ajv = new Ajv({ allErrors: true });\n  const schema = {\n    title: 'GApiData',\n    type: 'object',\n    properties: {\n      apiKey: {\n        type: 'string',\n      },\n      clientId: {\n        type: 'string',\n      },\n      spreadsheetId: {\n        type: 'string',\n      },\n      sheetData: {\n        type: 'array',\n        minItems: 1,\n        items: {\n          type: 'object',\n          required: ['title', 'headers'],\n          properties: {\n            title: {\n              type: 'string',\n            },\n            headers: {\n              type: 'array',\n              minItems: 1,\n              items: {\n                type: 'object',\n                required: ['title'],\n                properties: {\n                  title: {\n                    type: 'string',\n                  },\n                  values: {\n                    type: 'array',\n                    items: {\n                      type: 'string',\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    additionalProperties: false,\n    required: ['apiKey', 'clientId', 'spreadsheetId', 'sheetData'],\n  };\n  const test = ajv.compile(schema);\n  if (test(obj)) {\n    return {\n      valid: true,\n      value: obj as GApiData,\n    };\n  }\n  return { valid: false, errors: test.errors };\n}\n","/* global gapi */\n\n// Array of API discovery doc URLs for APIs\nconst discoveryDocs = [\n  'https://sheets.googleapis.com/$discovery/rest?version=v4',\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n// https://developers.google.com/sheets/api/guides/authorizing\nconst scope = 'https://www.googleapis.com/auth/spreadsheets';\n\nexport function loadGApi(\n  apiKey: string,\n  clientId: string,\n  setSignInStatus: (status: boolean) => void,\n) {\n  function handleClientLoad() {\n    gapi.load('client:auth2', initClient);\n  }\n\n  async function initClient() {\n    try {\n      await gapi.client.init({\n        apiKey,\n        clientId,\n        discoveryDocs,\n        scope,\n      });\n\n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(setSignInStatus);\n\n      // Handle the initial sign-in state.\n      setSignInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    } catch (error) {\n      console.log(JSON.stringify(error, null, 2));\n    }\n  }\n\n  const script = document.createElement('script');\n  script.src = 'https://apis.google.com/js/client.js';\n  script.onload = () => handleClientLoad();\n  document.body.appendChild(script);\n}\n\nexport function handleSignIn() {\n  gapi.auth2.getAuthInstance().signIn();\n}\n\nexport function handleSignOut() {\n  gapi.auth2.getAuthInstance().signOut();\n}\n\n// https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/append\nexport async function appendRow(\n  spreadsheetId: string,\n  sheet: string,\n  row: any[],\n) {\n  const response = await gapi.client.sheets.spreadsheets.values.append({\n    spreadsheetId,\n    range: `${sheet}`,\n    valueInputOption: 'USER_ENTERED',\n    resource: {\n      values: [row],\n    },\n  });\n\n  return {\n    response,\n    updatedRange: response.result.updates.updatedRange,\n    updatedRows: response.result.updates.updatedRows,\n  };\n}\n\nexport async function getSpreadsheetTitle(spreadsheetId: string) {\n  const response = await gapi.client.sheets.spreadsheets.get({\n    spreadsheetId,\n  });\n  return String(response.result.properties.title);\n}\n\n/*\n// What follows is code from an abandoned idea of building the config\n// dynamically when the user signs in. In practice it is nicer to just\n// manually tweak what elements to show or not.\n\nasync function updateSheetData(config: GApiData) {\n  try {\n    const sheets = await getSheets(config.spreadsheetId);\n    config.sheetData = sheets;\n    console.log(JSON.stringify(config, null, 2));\n  } catch (error) {\n    console.log('Error!');\n    console.log(error);\n  }\n}\n\nasync function getSheets(spreadsheetId: string) {\n  const spreadsheet = await gapi.client.sheets.spreadsheets.get({\n    spreadsheetId,\n  });\n\n  const sheets = spreadsheet.result.sheets\n    // do not list sheets that were hidden\n    .filter((sheet: any) => !sheet.properties.hidden)\n    .map((sheet: any) => ({\n      title: String(sheet.properties.title),\n      sheetId: String(sheet.properties.sheetId),\n    }));\n\n  // no forEach with async/await yet :/\n  for (const sheet of sheets) {\n    const headers = await getFirstRow(spreadsheetId, sheet.title);\n    const expandedHeaders = headers.map((header: string, index: number) => ({\n      index,\n      title: header,\n      values: [],\n    }));\n    for (const header of expandedHeaders) {\n      if (/type/i.test(header.title)) {\n        header.values = await getColumnValues(\n          spreadsheetId,\n          sheet.title,\n          header.index,\n        );\n      }\n    }\n    sheet.headers = expandedHeaders;\n  }\n  return sheets;\n}\n\nasync function getColumnValues(\n  spreadsheetId: string,\n  sheet: string,\n  column: number,\n) {\n  const columnLetter = String.fromCharCode('A'.charCodeAt(0) + column);\n  const response = await gapi.client.sheets.spreadsheets.values.get({\n    spreadsheetId,\n    // ignores header (position 1)\n    range: `${sheet}!${columnLetter}2:${columnLetter}`,\n  });\n  const flattened = response.result.values.flat();\n  // only unique values\n  return Array.from(new Set(flattened));\n}\n\nasync function getFirstRow(spreadsheetId: string, sheet: string) {\n  const response = await gapi.client.sheets.spreadsheets.values.get({\n    spreadsheetId,\n    range: `${sheet}!A1:1`,\n  });\n  return response.result.values[0];\n}\n*/\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport DatePicker from './DatePicker';\nimport Select from './Select';\nimport Amount from './Amount';\nimport Comment from './Comment';\nimport CommentWithSuggestion from './CommentWithSuggestion';\nimport { isDebug } from '../sheets/config';\nimport { appendRow } from '../sheets/spreadsheet';\n\ninterface TabContainerProps {\n  isSignedIn: boolean;\n  spreadsheetId: string;\n  sheet: string;\n  elements: SheetHeader[];\n  logger: Logger;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: 8 * 3,\n  },\n  button: {\n    marginTop: '30px',\n  },\n}));\n\nfunction nowDate() {\n  const date = new Date();\n  const year = `${date.getFullYear()}`.padStart(4, '0');\n  const month = `${date.getMonth() + 1}`.padStart(2, '0');\n  const day = `${date.getDate()}`.padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nfunction formatOut(dateString: string) {\n  const date = new Date(dateString);\n  const year = `${date.getFullYear()}`.padStart(4, '0');\n  const month = `${date.getMonth() + 1}`.padStart(2, '0');\n  const day = `${date.getDate()}`.padStart(2, '0');\n  return `${day}/${month}/${year}`;\n}\n\nfunction valuesToArray(elements: SheetHeader[], object: any) {\n  const result = Array.from({ length: elements.length }).fill(undefined);\n\n  elements.forEach(({ title }, index) => {\n    const value = object[index];\n    if (value) {\n      if (/date/i.test(title)) {\n        result[index] = formatOut(value);\n      } else {\n        result[index] = value;\n      }\n    }\n  });\n  return result;\n}\n\nexport default function TabContainer(props: TabContainerProps) {\n  const classes = useStyles();\n\n  const initialValues: any = {};\n  props.elements.forEach(({ title }, index) => {\n    if (/date/i.test(title)) {\n      initialValues[index] = nowDate();\n    } else {\n      initialValues[index] = '';\n    }\n  });\n\n  const [state, setState] = React.useState({ ...initialValues });\n\n  const onClick = async () => {\n    const values = valuesToArray(props.elements, state);\n    console.log(\n      JSON.stringify([props.spreadsheetId, props.sheet, values], null, 2),\n    );\n    if (!isDebug()) {\n      const response = await appendRow(\n        props.spreadsheetId,\n        props.sheet,\n        values,\n      );\n      console.log(response);\n      props.logger.log(`Updated: ${response.updatedRange}`);\n    }\n    setState({ ...initialValues });\n  };\n\n  const onChange = (index: number) => (value: string | undefined) => {\n    setState((oldState: any) => {\n      return {\n        ...oldState,\n        [index]: String(value),\n      };\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      {props.elements.map((element, index) => {\n        const baseProps = {\n          key: index,\n          value: state[index],\n          onChange: onChange(index),\n        };\n        if (/date/i.test(element.title)) {\n          return <DatePicker {...baseProps} />;\n        }\n        if (/amount/i.test(element.title)) {\n          return <Amount {...baseProps} />;\n        }\n        if (/comment/i.test(element.title)) {\n          return <Comment {...baseProps} />;\n        }\n        if (/type/i.test(element.title)) {\n          return <Select {...baseProps} choices={element.values || []} />;\n        }\n        if (/text/i.test(element.title)) {\n          return (\n            <CommentWithSuggestion\n              {...baseProps}\n              suggestions={element.values || []}\n            />\n          );\n        }\n        return (\n          <Typography key={index}>\n            Cannot build widget for \"{element.title}\"\n          </Typography>\n        );\n      })}\n      {props.isSignedIn ? (\n        <Button\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          onClick={() => onClick()}\n        >\n          submit\n        </Button>\n      ) : (\n        <Button\n          disabled={true}\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n        >\n          You must sign in to submit\n        </Button>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TabContainer from './TabContainer';\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\ninterface ScrollableTabsProps {\n  isSignedIn: boolean;\n  sheets: Sheet[];\n  spreadsheetId: string;\n  logger: { log: (message: string) => void };\n}\n\nexport default function ScrollableTabs(props: ScrollableTabsProps) {\n  const classes = useStyles();\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={tabIndex}\n          onChange={(_: unknown, newIndex: number) => setTabIndex(newIndex)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {props.sheets.map(({ title }, index) => (\n            <Tab label={title} key={index} />\n          ))}\n        </Tabs>\n      </AppBar>\n      {props.sheets.map(\n        ({ headers, title }, index) =>\n          tabIndex === index && (\n            <TabContainer\n              isSignedIn={props.isSignedIn}\n              spreadsheetId={props.spreadsheetId}\n              logger={props.logger}\n              elements={headers}\n              sheet={title}\n              key={index}\n            />\n          ),\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/CloudOff';\nimport OkIcon from '@material-ui/icons/CloudDone';\nimport Badge from '@material-ui/core/Badge';\nimport { loadGApi, handleSignIn, handleSignOut } from '../sheets/spreadsheet';\n\nfunction init(\n  apiKey: string,\n  clientId: string,\n  setSignIn: (isSignedIn: boolean) => void,\n) {\n  if (!init.loaded) {\n    init.loaded = true;\n    loadGApi(apiKey, clientId, setSignIn);\n  }\n}\ninit.loaded = false;\n\ninterface SignInAndOutProps {\n  apiKey: string;\n  clientId: string;\n\n  isSignedIn: boolean;\n  onSignIn: (isSignedIn: boolean) => void;\n}\n\nexport default function SignInAndOut(props: SignInAndOutProps) {\n  React.useEffect(() => init(props.apiKey, props.clientId, props.onSignIn), [\n    props.apiKey,\n    props.clientId,\n    props.onSignIn,\n  ]);\n\n  const signInButton = (\n    <IconButton onClick={handleSignIn} title=\"Sign In\" color=\"inherit\">\n      <Badge badgeContent={'1'} color=\"secondary\">\n        <ErrorIcon />\n      </Badge>\n    </IconButton>\n  );\n  const signOutButton = (\n    <IconButton onClick={handleSignOut} title=\"Sign Out\" color=\"inherit\">\n      <OkIcon />\n    </IconButton>\n  );\n\n  return <div>{props.isSignedIn ? signOutButton : signInButton}</div>;\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport LockedIcon from '@material-ui/icons/LockOutlined';\nimport UnlockedIcon from '@material-ui/icons/Lock';\nimport Badge from '@material-ui/core/Badge';\n\ninterface SecretDialogProps {\n  // if not isValid then pop-up dialog\n  isValid: boolean;\n  isValidPassword: (password: string) => boolean;\n  onValue: (password: string) => void;\n}\n\nconst defaultPassword = '';\nexport default function SecretDialog(props: SecretDialogProps) {\n  const [open, setOpen] = React.useState(!props.isValid);\n\n  // for handling form validity feedback\n  const initialCheck = props.isValidPassword(defaultPassword);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(defaultPassword);\n\n  function handleClickOpen() {\n    setTmpValue(defaultPassword);\n    setOpen(true);\n  }\n\n  function handleClose(isSet: boolean) {\n    setOpen(false);\n    if (isSet) {\n      props.onValue(tmpValue);\n    }\n    setTmpValue(defaultPassword);\n  }\n\n  function handleChange(event: any) {\n    const newValue = event.target.value;\n    setTmpValue(newValue);\n    setValidCheck(props.isValidPassword(newValue));\n  }\n\n  return (\n    <div>\n      <IconButton\n        onClick={handleClickOpen}\n        title=\"Set unlock secret\"\n        color=\"inherit\"\n      >\n        {!props.isValid ? (\n          <Badge badgeContent={'1'} color=\"secondary\">\n            <LockedIcon />\n          </Badge>\n        ) : (\n          <UnlockedIcon />\n        )}\n      </IconButton>\n      <Dialog open={open} onClose={() => handleClose(false)}>\n        <DialogTitle>Set unlock secret</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Set the secret to decrypt the API key and sheet id.\n          </DialogContentText>\n          <TextField\n            error={!isValidCheck}\n            autoFocus\n            margin=\"dense\"\n            label=\"Unlock secret\"\n            type=\"text\"\n            onChange={handleChange}\n            fullWidth\n            value={tmpValue}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => handleClose(true)} color=\"primary\">\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport OfflineIcon from '@material-ui/icons/OfflineBolt';\nimport Typography from '@material-ui/core/Typography';\nimport Notifier from './widgets/Notifier';\nimport Tabs from './widgets/Tabs';\nimport SignInAndOut from './widgets/SignInAndOut';\nimport SecretDialog from './widgets/SecretDialog';\nimport { getConfig } from './sheets/config';\nimport { getSpreadsheetTitle } from './sheets/spreadsheet';\nimport { name, version } from '../package.json';\n\nconst appTitle = 'Sheety Writer';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    whiteSpace: 'nowrap',\n    paddingRight: 10,\n  },\n  subtitle: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    fontWeight: 'bold',\n  },\n  failure: {\n    padding: 8 * 3,\n    fontStyle: 'italic',\n  },\n}));\n\nconst hideSecretDialogOnUnlock = true;\nconst storageKey = 'config-secret';\n\nexport default function App() {\n  const classes = useStyles();\n\n  const defaultPassword = localStorage.getItem(storageKey) || '';\n  const [config, setConfig] = React.useState(getConfig(defaultPassword));\n  const [isValid, setValid] = React.useState(config.valid);\n  const [isOnline, setIsOnline] = React.useState(true);\n  const [isSignedIn, setIsSignedIn] = React.useState(false);\n  const [sheetTitle, setSheetTitle] = React.useState('');\n\n  window.addEventListener('online', () => setIsOnline(true));\n  window.addEventListener('offline', () => setIsOnline(false));\n\n  // note that logger.log will be replaced by the `Notifier` element.\n  const logger = { log: (message: string) => console.log(message) };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            onClick={() => logger.log(`${name}: ${version}`)}\n          >\n            {appTitle}\n          </Typography>\n          {sheetTitle && (\n            <Typography className={classes.subtitle}>{sheetTitle}</Typography>\n          )}\n          {!isOnline && <OfflineIcon />}\n          {config.valid && (\n            <SignInAndOut\n              isSignedIn={isSignedIn}\n              onSignIn={signedIn => {\n                setIsSignedIn(signedIn);\n                getSpreadsheetTitle(config.value.spreadsheetId).then(title =>\n                  setSheetTitle(title),\n                );\n              }}\n              apiKey={config.value.apiKey}\n              clientId={config.value.clientId}\n            />\n          )}\n          {(!config.valid || !hideSecretDialogOnUnlock) && (\n            <SecretDialog\n              isValid={isValid}\n              onValue={newPassword => {\n                const newConfig = getConfig(newPassword);\n                setConfig(newConfig);\n                setValid(newConfig.valid);\n                if (newConfig.valid) {\n                  localStorage.setItem(storageKey, newPassword);\n                }\n              }}\n              isValidPassword={newPassword => getConfig(newPassword).valid}\n            />\n          )}\n        </Toolbar>\n      </AppBar>\n      {config.valid ? (\n        <Tabs\n          isSignedIn={isSignedIn}\n          spreadsheetId={config.value.spreadsheetId}\n          sheets={config.value.sheetData}\n          logger={logger}\n        />\n      ) : (\n        <Typography className={classes.failure} variant=\"h6\">\n          Invalid, or encrypted, config file.\n        </Typography>\n      )}\n      <Notifier logger={logger} />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { isDebug } from './sheets/config';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (isDebug()) {\n  serviceWorker.unregister();\n} else {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}