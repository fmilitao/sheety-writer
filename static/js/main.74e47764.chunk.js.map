{"version":3,"sources":["widgets/Notifier.tsx","widgets/DatePicker.tsx","widgets/Select.tsx","widgets/Amount.tsx","widgets/Comment.tsx","widgets/CommentWithSuggestion.tsx","sheets/config.ts","sheets/validation.ts","sheets/spreadsheet.ts","widgets/TabContainer.tsx","widgets/Tabs.tsx","widgets/SignInAndOut.tsx","widgets/SecretDialog.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","close","padding","spacing","Notifier","props","classes","React","useState","open","setOpen","message","setMessage","handleClose","_event","reason","logger","log","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","key","aria-label","color","className","onClick","DatePicker","TextField","id","label","type","fullWidth","value","onChange","event","newValue","target","InputLabelProps","shrink","Select","InputLabel","htmlFor","NativeSelect","choices","map","choice","index","Amount","placeholder","margin","Comment","createStyles","root","flexGrow","input","display","height","valueContainer","flexWrap","flex","alignItems","overflow","noOptionsMessage","singleValue","fontSize","palette","text","hint","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","ref","components","Control","children","innerProps","innerRef","selectProps","TextFieldProps","InputProps","inputProps","Menu","Paper","square","NoOptionsMessage","Typography","Option","MenuItem","selected","isFocused","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","CommentWithSuggestion","suggestions","suggestion","useTheme","selectStyles","base","primary","font","valueConverted","NoSsr","styles","inputId","isClearable","options","undefined","url","URL","window","location","href","isDebug","param","toLowerCase","parseBoolean","searchParams","get","getConfigObject","password","config","configParam","configFile","getConfigParamOrResource","valid","JSON","parse","encrypted","decrypted","CryptoJS","AES","decrypt","toString","enc","Utf8","error","getConfig","json","validation","obj","test","Ajv","allErrors","compile","title","properties","apiKey","clientId","spreadsheetId","sheetData","minItems","items","required","headers","values","additionalProperties","errors","validate","discoveryDocs","loadGApi","setSignInStatus","initClient","a","async","gapi","client","init","scope","auth2","getAuthInstance","isSignedIn","listen","console","stringify","script","document","createElement","src","onload","load","body","appendChild","handleSignIn","signIn","handleSignOut","signOut","appendRow","sheet","row","sheets","spreadsheets","append","range","valueInputOption","resource","response","updatedRange","result","updates","updatedRows","button","valuesToArray","elements","object","Array","from","length","fill","forEach","dateString","date","Date","year","getFullYear","padStart","month","getMonth","day","getDate","formatOut","TabContainer","initialValues","nowDate","state","setState","oldState","String","element","baseProps","Button","size","variant","disabled","width","backgroundColor","background","ScrollableTabs","tabIndex","setTabIndex","AppBar","Tabs","_","newIndex","indicatorColor","textColor","scrollButtons","Tab","setSignIn","loaded","SignInAndOut","useEffect","onSignIn","signInButton","Badge","badgeContent","signOutButton","SecretDialog","isValid","initialCheck","isValidPassword","isValidCheck","setValidCheck","tmpValue","setTmpValue","isSet","onValue","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","DialogActions","whiteSpace","paddingRight","subtitle","textOverflow","failure","fontStyle","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","defaultPassword","localStorage","getItem","setConfig","setValid","isOnline","setIsOnline","setIsSignedIn","sheetTitle","setSheetTitle","addEventListener","Toolbar","name","version","signedIn","getSpreadsheetTitle","newPassword","newConfig","setItem","getElementById","ready","unregister","process","origin","fetch","contentType","status","indexOf","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.74e47764.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\ninterface NotifierProps {\n  logger: Logger;\n}\n\nexport default function Notifier(props: NotifierProps) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState('Hello!');\n\n  function handleClick(message: string) {\n    setMessage(message);\n    setOpen(true);\n  }\n\n  props.logger.log = handleClick;\n\n  function handleClose(_event: unknown, reason?: string) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      message={message}\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface DatePickerProps {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function DatePicker(props: DatePickerProps) {\n  const handleChange = (event: any) => {\n    const newValue = event.target.value;\n    props.onChange(newValue);\n  };\n\n  return (\n    <TextField\n      id=\"date\"\n      label=\"Date\"\n      type=\"date\"\n      fullWidth\n      value={props.value}\n      onChange={handleChange}\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\ninterface SelectProps {\n  choices: string[];\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function Select(props: SelectProps) {\n  return (\n    <div>\n      <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\n        Type\n      </InputLabel>\n      <NativeSelect\n        fullWidth\n        value={props.value}\n        onChange={event => props.onChange(event.target.value)}\n      >\n        <option value={''} key={-1}>\n          - None -\n        </option>\n        {props.choices.map((choice, index) => {\n          return (\n            <option value={choice} key={index}>\n              {choice}\n            </option>\n          );\n        })}\n      </NativeSelect>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface AmountProps {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function Amount(props: AmountProps) {\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    props.onChange(newValue);\n  };\n\n  return (\n    <TextField\n      id=\"standard-number\"\n      label=\"Amount\"\n      placeholder=\"How much was spent...\"\n      value={props.value}\n      onChange={handleChange}\n      type=\"number\"\n      fullWidth\n      InputLabelProps={{\n        shrink: true,\n      }}\n      margin=\"normal\"\n    />\n  );\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface CommentProps {\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function Comment(props: CommentProps) {\n  const handleChange = (event: any) => {\n    const newValue = event.target.value;\n    props.onChange(newValue);\n  };\n\n  return (\n    <TextField\n      id=\"standard-full-width\"\n      label=\"Comment\"\n      value={props.value}\n      onChange={handleChange}\n      type=\"text\"\n      placeholder=\"What you spent money on...\"\n      fullWidth\n      margin=\"normal\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  );\n}\n","import React, { CSSProperties, HTMLAttributes } from 'react';\n// import Select from 'react-select';\nimport Select from 'react-select/creatable';\nimport {\n  createStyles,\n  makeStyles,\n  useTheme,\n  Theme,\n} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField, { BaseTextFieldProps } from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PropTypes from 'prop-types';\nimport { ValueContainerProps } from 'react-select/src/components/containers';\nimport { ControlProps } from 'react-select/src/components/Control';\nimport { MenuProps, NoticeProps } from 'react-select/src/components/Menu';\nimport { OptionProps } from 'react-select/src/components/Option';\nimport { PlaceholderProps } from 'react-select/src/components/Placeholder';\nimport { SingleValueProps } from 'react-select/src/components/SingleValue';\nimport { ValueType } from 'react-select/src/types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    input: {\n      display: 'flex',\n      padding: 0,\n      height: 'auto',\n    },\n    valueContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      flex: 1,\n      alignItems: 'center',\n      overflow: 'hidden',\n    },\n    noOptionsMessage: {\n      padding: theme.spacing(1, 2),\n    },\n    singleValue: {\n      fontSize: 16,\n    },\n    placeholder: {\n      color: theme.palette.text.hint,\n      position: 'absolute',\n      left: 2,\n      bottom: 6,\n      fontSize: 16,\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing(1),\n      left: 0,\n      right: 0,\n    },\n    divider: {\n      height: theme.spacing(2),\n    },\n  }),\n);\n\nfunction NoOptionsMessage(props: NoticeProps<OptionType>) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\ntype InputComponentProps = Pick<BaseTextFieldProps, 'inputRef'> &\n  HTMLAttributes<HTMLDivElement>;\n\nfunction inputComponent({ inputRef, ...props }: InputComponentProps) {\n  return <div ref={inputRef} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n} as any;\n\nfunction Control(props: ControlProps<OptionType>) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps },\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps,\n        },\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\n\nControl.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction Option(props: OptionProps<OptionType>) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool,\n} as any;\n\nfunction Placeholder(props: PlaceholderProps<OptionType>) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction SingleValue(props: SingleValueProps<OptionType>) {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction ValueContainer(props: ValueContainerProps<OptionType>) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nValueContainer.propTypes = {\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired,\n} as any;\n\nfunction Menu(props: MenuProps<OptionType>) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object,\n} as any;\n\nconst components = {\n  Control,\n  Menu,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\ninterface OptionType {\n  label: string;\n  value: string;\n}\n\ninterface CommentWithSuggestionProps {\n  suggestions: string[];\n  value: string | undefined;\n  onChange: (value: string | undefined) => void;\n}\n\nexport default function CommentWithSuggestion(\n  props: CommentWithSuggestionProps,\n) {\n  const suggestions: OptionType[] = props.suggestions.map(suggestion => ({\n    value: suggestion,\n    label: suggestion,\n  }));\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  function handleChangeSingle(value: ValueType<OptionType>) {\n    if (value === null || value === undefined) {\n      props.onChange(undefined);\n      return;\n    }\n\n    // we are not using the array options, only single value\n    // so the cast is safe\n    props.onChange((value as OptionType).value);\n  }\n\n  const selectStyles = {\n    input: (base: CSSProperties) => ({\n      ...base,\n      color: theme.palette.text.primary,\n      '& input': {\n        font: 'inherit',\n      },\n    }),\n  };\n\n  const valueConverted: ValueType<OptionType> = props.value\n    ? { label: props.value, value: props.value }\n    : null;\n\n  return (\n    <div className={classes.root}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-single\"\n          TextFieldProps={{\n            label: 'Type',\n            InputLabelProps: {\n              htmlFor: 'react-select-single',\n              shrink: true,\n            },\n          }}\n          placeholder={'Expense type...'}\n          isClearable\n          options={suggestions}\n          components={components}\n          value={valueConverted}\n          onChange={handleChangeSingle}\n        />\n      </NoSsr>\n    </div>\n  );\n}\n","import CryptoJS from 'crypto-js';\nimport { validate } from './validation';\n// import configFile from '../resources/decrypted.json';\nimport configFile from '../resources/encrypted.json';\n\nconst url = new URL(window.location.href);\n\nfunction parseBoolean(param: string | null) {\n  return param !== null && param.toLowerCase() === 'true';\n}\n\nexport function isDebug(): boolean {\n  const param = url.searchParams.get('debug');\n  return parseBoolean(param);\n}\n\nfunction getConfigParamOrResource(): unknown {\n  const configParam = url.searchParams.get('config');\n  if (configParam === null) {\n    return configFile;\n  }\n  return configParam;\n}\n\nfunction decrypt(encrypted: string, password: string): any {\n  const decrypted = CryptoJS.AES.decrypt(encrypted, password);\n  return JSON.parse(decrypted.toString(CryptoJS.enc.Utf8));\n}\n\nfunction getConfigObject(password?: string): Valid<any> {\n  const config = getConfigParamOrResource();\n  // console.log('using config', config);\n  if (typeof config === 'string') {\n    try {\n      return { valid: true, value: JSON.parse(config) };\n    } catch {\n      // ignores any error, assumes some parsing failure\n      if (password) {\n        try {\n          const decrypted = decrypt(config, password);\n          return { valid: true, value: decrypted };\n        } catch (error) {\n          // fall through\n        }\n      }\n    }\n    return { valid: false };\n  }\n  return { valid: true, value: config };\n}\n\nexport function getConfig(password?: string): Valid<GApiData> {\n  const json = getConfigObject(password);\n  if (!json.valid) {\n    return { valid: false };\n  }\n  const validation = validate(json.value);\n  if (validation.valid) {\n    return { valid: true, value: validation.value };\n  }\n  return { valid: false };\n}\n","import Ajv from 'ajv';\n\nexport function validate(obj: unknown): Valid<GApiData> {\n  const ajv = new Ajv({ allErrors: true });\n  const schema = {\n    title: 'GApiData',\n    type: 'object',\n    properties: {\n      apiKey: {\n        type: 'string',\n      },\n      clientId: {\n        type: 'string',\n      },\n      spreadsheetId: {\n        type: 'string',\n      },\n      sheetData: {\n        type: 'array',\n        minItems: 1,\n        items: {\n          type: 'object',\n          required: ['title', 'headers'],\n          properties: {\n            title: {\n              type: 'string',\n            },\n            headers: {\n              type: 'array',\n              minItems: 1,\n              items: {\n                type: 'object',\n                required: ['title'],\n                properties: {\n                  title: {\n                    type: 'string',\n                  },\n                  values: {\n                    type: 'array',\n                    items: {\n                      type: 'string',\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    additionalProperties: false,\n    required: ['apiKey', 'clientId', 'spreadsheetId', 'sheetData'],\n  };\n  const test = ajv.compile(schema);\n  if (test(obj)) {\n    return {\n      valid: true,\n      value: obj as GApiData,\n    };\n  }\n  return { valid: false, errors: test.errors };\n}\n","/* global gapi */\n\n// Array of API discovery doc URLs for APIs\nconst discoveryDocs = [\n  'https://sheets.googleapis.com/$discovery/rest?version=v4',\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n// https://developers.google.com/sheets/api/guides/authorizing\nconst scope = 'https://www.googleapis.com/auth/spreadsheets';\n\nexport function loadGApi(\n  apiKey: string,\n  clientId: string,\n  setSignInStatus: (status: boolean) => void,\n) {\n  function handleClientLoad() {\n    gapi.load('client:auth2', initClient);\n  }\n\n  async function initClient() {\n    try {\n      await gapi.client.init({\n        apiKey,\n        clientId,\n        discoveryDocs,\n        scope,\n      });\n\n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(setSignInStatus);\n\n      // Handle the initial sign-in state.\n      setSignInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    } catch (error) {\n      console.log(JSON.stringify(error, null, 2));\n    }\n  }\n\n  const script = document.createElement('script');\n  script.src = 'https://apis.google.com/js/client.js';\n  script.onload = () => handleClientLoad();\n  document.body.appendChild(script);\n}\n\nexport function handleSignIn() {\n  gapi.auth2.getAuthInstance().signIn();\n}\n\nexport function handleSignOut() {\n  gapi.auth2.getAuthInstance().signOut();\n}\n\n// https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/append\nexport async function appendRow(\n  spreadsheetId: string,\n  sheet: string,\n  row: any[],\n) {\n  const response = await gapi.client.sheets.spreadsheets.values.append({\n    spreadsheetId,\n    range: `${sheet}`,\n    valueInputOption: 'USER_ENTERED',\n    resource: {\n      values: [row],\n    },\n  });\n\n  return {\n    response,\n    updatedRange: response.result.updates.updatedRange,\n    updatedRows: response.result.updates.updatedRows,\n  };\n}\n\nexport async function getSpreadsheetTitle(spreadsheetId: string) {\n  const response = await gapi.client.sheets.spreadsheets.get({\n    spreadsheetId,\n  });\n  return String(response.result.properties.title);\n}\n\n/*\n// What follows is code from an abandoned idea of building the config\n// dynamically when the user signs in. In practice it is nicer to just\n// manually tweak what elements to show or not.\n\nasync function updateSheetData(config: GApiData) {\n  try {\n    const sheets = await getSheets(config.spreadsheetId);\n    config.sheetData = sheets;\n    console.log(JSON.stringify(config, null, 2));\n  } catch (error) {\n    console.log('Error!');\n    console.log(error);\n  }\n}\n\nasync function getSheets(spreadsheetId: string) {\n  const spreadsheet = await gapi.client.sheets.spreadsheets.get({\n    spreadsheetId,\n  });\n\n  const sheets = spreadsheet.result.sheets\n    // do not list sheets that were hidden\n    .filter((sheet: any) => !sheet.properties.hidden)\n    .map((sheet: any) => ({\n      title: String(sheet.properties.title),\n      sheetId: String(sheet.properties.sheetId),\n    }));\n\n  // no forEach with async/await yet :/\n  for (const sheet of sheets) {\n    const headers = await getFirstRow(spreadsheetId, sheet.title);\n    const expandedHeaders = headers.map((header: string, index: number) => ({\n      index,\n      title: header,\n      values: [],\n    }));\n    for (const header of expandedHeaders) {\n      if (/type/i.test(header.title)) {\n        header.values = await getColumnValues(\n          spreadsheetId,\n          sheet.title,\n          header.index,\n        );\n      }\n    }\n    sheet.headers = expandedHeaders;\n  }\n  return sheets;\n}\n\nasync function getColumnValues(\n  spreadsheetId: string,\n  sheet: string,\n  column: number,\n) {\n  const columnLetter = String.fromCharCode('A'.charCodeAt(0) + column);\n  const response = await gapi.client.sheets.spreadsheets.values.get({\n    spreadsheetId,\n    // ignores header (position 1)\n    range: `${sheet}!${columnLetter}2:${columnLetter}`,\n  });\n  const flattened = response.result.values.flat();\n  // only unique values\n  return Array.from(new Set(flattened));\n}\n\nasync function getFirstRow(spreadsheetId: string, sheet: string) {\n  const response = await gapi.client.sheets.spreadsheets.values.get({\n    spreadsheetId,\n    range: `${sheet}!A1:1`,\n  });\n  return response.result.values[0];\n}\n*/\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport DatePicker from './DatePicker';\nimport Select from './Select';\nimport Amount from './Amount';\nimport Comment from './Comment';\nimport CommentWithSuggestion from './CommentWithSuggestion';\nimport { isDebug } from '../sheets/config';\nimport { appendRow } from '../sheets/spreadsheet';\n\ninterface TabContainerProps {\n  isSignedIn: boolean;\n  spreadsheetId: string;\n  sheet: string;\n  elements: SheetHeader[];\n  logger: Logger;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: 8 * 3,\n  },\n  button: {\n    marginTop: '30px',\n  },\n}));\n\nfunction nowDate() {\n  const date = new Date();\n  const year = `${date.getFullYear()}`.padStart(4, '0');\n  const month = `${date.getMonth() + 1}`.padStart(2, '0');\n  const day = `${date.getDate()}`.padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nfunction formatOut(dateString: string) {\n  const date = new Date(dateString);\n  const year = `${date.getFullYear()}`.padStart(4, '0');\n  const month = `${date.getMonth() + 1}`.padStart(2, '0');\n  const day = `${date.getDate()}`.padStart(2, '0');\n  return `${day}/${month}/${year}`;\n}\n\nfunction valuesToArray(elements: SheetHeader[], object: any) {\n  const result = Array.from({ length: elements.length }).fill(undefined);\n\n  elements.forEach(({ title }, index) => {\n    const value = object[index];\n    if (value) {\n      if (/date/i.test(title)) {\n        result[index] = formatOut(value);\n      } else {\n        result[index] = value;\n      }\n    }\n  });\n  return result;\n}\n\nexport default function TabContainer(props: TabContainerProps) {\n  const classes = useStyles();\n\n  const initialValues: any = {};\n  props.elements.forEach(({ title }, index) => {\n    if (/date/i.test(title)) {\n      initialValues[index] = nowDate();\n    } else {\n      initialValues[index] = '';\n    }\n  });\n\n  const [state, setState] = React.useState({ ...initialValues });\n\n  const onClick = async () => {\n    const values = valuesToArray(props.elements, state);\n    console.log(\n      JSON.stringify([props.spreadsheetId, props.sheet, values], null, 2),\n    );\n    if (!isDebug()) {\n      const response = await appendRow(\n        props.spreadsheetId,\n        props.sheet,\n        values,\n      );\n      console.log(response);\n      props.logger.log(`Updated: ${response.updatedRange}`);\n    }\n    setState({ ...initialValues });\n  };\n\n  const onChange = (index: number) => (value: string | undefined) => {\n    setState((oldState: any) => {\n      return {\n        ...oldState,\n        [index]: String(value),\n      };\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      {props.elements.map((element, index) => {\n        const baseProps = {\n          key: index,\n          value: state[index],\n          onChange: onChange(index),\n        };\n        if (/date/i.test(element.title)) {\n          return <DatePicker {...baseProps} />;\n        }\n        if (/amount/i.test(element.title)) {\n          return <Amount {...baseProps} />;\n        }\n        if (/comment/i.test(element.title)) {\n          return <Comment {...baseProps} />;\n        }\n        if (/type/i.test(element.title)) {\n          return <Select {...baseProps} choices={element.values || []} />;\n        }\n        if (/text/i.test(element.title)) {\n          return (\n            <CommentWithSuggestion\n              {...baseProps}\n              suggestions={element.values || []}\n            />\n          );\n        }\n        return (\n          <Typography key={index}>\n            Cannot build widget for \"{element.title}\"\n          </Typography>\n        );\n      })}\n      {props.isSignedIn ? (\n        <Button\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          onClick={() => onClick()}\n        >\n          submit\n        </Button>\n      ) : (\n        <Button\n          disabled={true}\n          fullWidth\n          size=\"large\"\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n        >\n          You must sign in to submit\n        </Button>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport TabContainer from './TabContainer';\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\ninterface ScrollableTabsProps {\n  isSignedIn: boolean;\n  sheets: Sheet[];\n  spreadsheetId: string;\n  logger: { log: (message: string) => void };\n}\n\nexport default function ScrollableTabs(props: ScrollableTabsProps) {\n  const classes = useStyles();\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={tabIndex}\n          onChange={(_: unknown, newIndex: number) => setTabIndex(newIndex)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {props.sheets.map(({ title }, index) => (\n            <Tab label={title} key={index} />\n          ))}\n        </Tabs>\n      </AppBar>\n      {props.sheets.map(\n        ({ headers, title }, index) =>\n          tabIndex === index && (\n            <TabContainer\n              isSignedIn={props.isSignedIn}\n              spreadsheetId={props.spreadsheetId}\n              logger={props.logger}\n              elements={headers}\n              sheet={title}\n              key={index}\n            />\n          ),\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/CloudOff';\nimport OkIcon from '@material-ui/icons/CloudDone';\nimport Badge from '@material-ui/core/Badge';\nimport { loadGApi, handleSignIn, handleSignOut } from '../sheets/spreadsheet';\n\nfunction init(\n  apiKey: string,\n  clientId: string,\n  setSignIn: (isSignedIn: boolean) => void,\n) {\n  if (!init.loaded) {\n    init.loaded = true;\n    loadGApi(apiKey, clientId, setSignIn);\n  }\n}\ninit.loaded = false;\n\ninterface SignInAndOutProps {\n  apiKey: string;\n  clientId: string;\n\n  isSignedIn: boolean;\n  onSignIn: (isSignedIn: boolean) => void;\n}\n\nexport default function SignInAndOut(props: SignInAndOutProps) {\n  React.useEffect(() => init(props.apiKey, props.clientId, props.onSignIn), [\n    props.apiKey,\n    props.clientId,\n    props.onSignIn,\n  ]);\n\n  const signInButton = (\n    <IconButton onClick={handleSignIn} title=\"Sign In\" color=\"inherit\">\n      <Badge badgeContent={'1'} color=\"secondary\">\n        <ErrorIcon />\n      </Badge>\n    </IconButton>\n  );\n  const signOutButton = (\n    <IconButton onClick={handleSignOut} title=\"Sign Out\" color=\"inherit\">\n      <OkIcon />\n    </IconButton>\n  );\n\n  return <div>{props.isSignedIn ? signOutButton : signInButton}</div>;\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport LockedIcon from '@material-ui/icons/LockOutlined';\nimport UnlockedIcon from '@material-ui/icons/Lock';\nimport Badge from '@material-ui/core/Badge';\n\ninterface SecretDialogProps {\n  // if not isValid then pop-up dialog\n  isValid: boolean;\n  isValidPassword: (password: string) => boolean;\n  onValue: (password: string) => void;\n}\n\nconst defaultPassword = '';\nexport default function SecretDialog(props: SecretDialogProps) {\n  const [open, setOpen] = React.useState(!props.isValid);\n\n  // for handling form validity feedback\n  const initialCheck = props.isValidPassword(defaultPassword);\n  const [isValidCheck, setValidCheck] = React.useState(initialCheck);\n  const [tmpValue, setTmpValue] = React.useState(defaultPassword);\n\n  function handleClickOpen() {\n    setTmpValue(defaultPassword);\n    setOpen(true);\n  }\n\n  function handleClose(isSet: boolean) {\n    setOpen(false);\n    if (isSet) {\n      props.onValue(tmpValue);\n    }\n    setTmpValue(defaultPassword);\n  }\n\n  function handleChange(event: any) {\n    const newValue = event.target.value;\n    setTmpValue(newValue);\n    setValidCheck(props.isValidPassword(newValue));\n  }\n\n  return (\n    <div>\n      <IconButton\n        onClick={handleClickOpen}\n        title=\"Set unlock secret\"\n        color=\"inherit\"\n      >\n        {!props.isValid ? (\n          <Badge badgeContent={'1'} color=\"secondary\">\n            <LockedIcon />\n          </Badge>\n        ) : (\n          <UnlockedIcon />\n        )}\n      </IconButton>\n      <Dialog open={open} onClose={() => handleClose(false)}>\n        <DialogTitle>Set unlock secret</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Set the secret to decrypt the API key and sheet id.\n          </DialogContentText>\n          <TextField\n            error={!isValidCheck}\n            autoFocus\n            margin=\"dense\"\n            label=\"Unlock secret\"\n            type=\"text\"\n            onChange={handleChange}\n            fullWidth\n            value={tmpValue}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => handleClose(true)} color=\"primary\">\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport OfflineIcon from '@material-ui/icons/OfflineBolt';\nimport Typography from '@material-ui/core/Typography';\nimport Notifier from './widgets/Notifier';\nimport Tabs from './widgets/Tabs';\nimport SignInAndOut from './widgets/SignInAndOut';\nimport SecretDialog from './widgets/SecretDialog';\nimport { getConfig } from './sheets/config';\nimport { getSpreadsheetTitle } from './sheets/spreadsheet';\nimport { name, version } from '../package.json';\n\nconst appTitle = 'Sheety Writer';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    whiteSpace: 'nowrap',\n    paddingRight: 10,\n  },\n  subtitle: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    fontWeight: 'bold',\n  },\n  failure: {\n    padding: 8 * 3,\n    fontStyle: 'italic',\n  },\n}));\n\nconst hideSecretDialogOnUnlock = true;\nconst storageKey = 'config-secret';\n\nexport default function App() {\n  const classes = useStyles();\n\n  const defaultPassword = localStorage.getItem(storageKey) || '';\n  const [config, setConfig] = React.useState(getConfig(defaultPassword));\n  const [isValid, setValid] = React.useState(config.valid);\n  const [isOnline, setIsOnline] = React.useState(true);\n  const [isSignedIn, setIsSignedIn] = React.useState(false);\n  const [sheetTitle, setSheetTitle] = React.useState('');\n\n  window.addEventListener('online', () => setIsOnline(true));\n  window.addEventListener('offline', () => setIsOnline(false));\n\n  // note that logger.log will be replaced by the `Notifier` element.\n  const logger = { log: (message: string) => console.log(message) };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            onClick={() => logger.log(`${name}: ${version}`)}\n          >\n            {appTitle}\n          </Typography>\n          {sheetTitle && (\n            <Typography className={classes.subtitle}>{sheetTitle}</Typography>\n          )}\n          {!isOnline && <OfflineIcon />}\n          {config.valid && (\n            <SignInAndOut\n              isSignedIn={isSignedIn}\n              onSignIn={signedIn => {\n                setIsSignedIn(signedIn);\n                getSpreadsheetTitle(config.value.spreadsheetId).then(title =>\n                  setSheetTitle(title),\n                );\n              }}\n              apiKey={config.value.apiKey}\n              clientId={config.value.clientId}\n            />\n          )}\n          {(!config.valid || !hideSecretDialogOnUnlock) && (\n            <SecretDialog\n              isValid={isValid}\n              onValue={newPassword => {\n                const newConfig = getConfig(newPassword);\n                setConfig(newConfig);\n                setValid(newConfig.valid);\n                if (newConfig.valid) {\n                  localStorage.setItem(storageKey, newPassword);\n                }\n              }}\n              isValidPassword={newPassword => getConfig(newPassword).valid}\n            />\n          )}\n        </Toolbar>\n      </AppBar>\n      {config.valid ? (\n        <Tabs\n          isSignedIn={isSignedIn}\n          spreadsheetId={config.value.spreadsheetId}\n          sheets={config.value.sheetData}\n          logger={logger}\n        />\n      ) : (\n        <Typography className={classes.failure} variant=\"h6\">\n          Invalid, or encrypted, config file.\n        </Typography>\n      )}\n      <Notifier logger={logger} />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { isDebug } from './sheets/config';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (isDebug()) {\n  serviceWorker.unregister();\n} else {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}